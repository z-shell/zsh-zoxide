# -*- mode: zsh; sh-indentation: 2; indent-tabs-mode: nil; sh-basic-offset: 2; -*-
# vim: ft=zsh sw=2 ts=2 et

builtin emulate -L zsh ${=${options[xtrace]:#off}:+-o xtrace}
builtin setopt extended_glob warn_create_global typeset_silent \
  no_short_loops rc_quotes no_auto_pushd local_options

typeset -gA ZEC
typeset -i count=0 ret=0
typeset -a input_array=( "$@" )
typeset -ga chpwd_functions __zoxide_z_prefix

: ${ZEC[CACHE_DIR]:=${ZEC[CACHE_DIR]:-${Plugins[ZSH_ZOXIDE]}/._zoxide}}
: ${ZEC[MD5_HASH]:=${ZEC[MD5_HASH]:-no_hash}}
: ${ZEC[DISABLED]:=${ZEC[DISABLED]:-0}}
: ${ZEC[DEBUG]:=${ZEC[DEBUG]:-0}}
: ${ZEC[MAX]:=${ZEC[MAX]:-1000}}

ZEC[CACHE_DIR]=${~ZEC[CACHE_DIR]}

: ${ZEC[CACHE]:=${ZEC[CACHE]:-${ZEC[CACHE_DIR]}/${ZEC[MD5_HASH]}.zsh}}
: ${ZEC[COUNT]:=${ZEC[COUNT]:-${ZEC[CACHE_DIR]}/${ZEC[MD5_HASH]}.txt}}

[[ -d $ZEC[CACHE_DIR] ]] || command mkdir -p $ZEC[CACHE_DIR] &> /dev/null

if (( $+commands[md5] )); then
  ZEC[MD5_HASH]=$(md5 <<< $input_array)
elif (( $+commands[md5sum] )); then
  ZEC[MD5_HASH]=$(md5sum <<< $input_array | awk '{ print $1 }')
else
  print "@zsh-eval-cache: md5 program not found"; return 1
fi

if (( ZEC[DISABLED] )); then
  (( ZEC[DEBUG] )) && builtin print -Pr "@zsh-eval-cache: disabled"
  eval "$( ${(@)input_array} )"; ret=$?
elif [[ -s $ZEC[CACHE] ]]; then
  [[ -f $ZEC[COUNT] ]] || builtin print 1 > $ZEC[COUNT] 2> /dev/null

  count=$(<$ZEC[COUNT]) && (( count++ ))
  builtin print $count > $ZEC[COUNT] 2> /dev/null

  (( ZEC[DEBUG] )) && builtin print -Pr "@zsh-eval-cache: hit $count"

  builtin source $ZEC[CACHE]; ret=$?
else
  [[ -f $ZEC[COUNT] ]] || builtin print 1 > $ZEC[COUNT] 2> /dev/null

  (( ZEC[DEBUG] )) && builtin print -Pr "@zsh-eval-cache: miss"

  ${(@)input_array} >! $ZEC[CACHE] && zcompile -U $ZEC[CACHE] && builtin source $ZEC[CACHE]; ret=$?
fi

(( count > ZEC[MAX] )) && command rm -rf $ZEC[CACHE_DIR] &> /dev/null

(( ret )) && builtin print -Pr "@zsh-eval-cache: failed to initialize zoxide" >&2

(( ret )) && builtin print -Pr "@zsh-eval-cache: failed to initialize zoxide" >&2

return $ret
